@page
@using CatGram.Models
@model CatGram.Pages.ProfileModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "My Cat Profile";
}

<p>Currently logged in as: @(await UserManager.GetUserAsync(User))</p>

<h2>Your Cats</h2>

@if (Model.CatProfiles.Any())
{
    <form method="post" enctype="multipart/form-data" asp-page-handler="Save">
        @for (int i = 0; i < Model.CatProfiles.Count; i++)
        {
            <div class="cat-profile" style="display:flex; gap:1rem; margin-bottom:1rem;">
                <img src="@Model.CatProfiles[i].ImagePath" width="100" />
                <div class="cat-fields">
                    <input type="hidden" asp-for="CatProfiles[@i].Id" />
                    <label>Name:</label>
                    <input asp-for="CatProfiles[@i].Name" /><br />

                    <label>Breed:</label>
                    <input asp-for="CatProfiles[@i].Breed" /><br />

                    <label>Color:</label>
                    <input asp-for="CatProfiles[@i].Color" /><br />

                    <label>Age:</label>
                    <input asp-for="CatProfiles[@i].Age" type="number" /><br />

                    <label>Food Preferences:</label>
                    <input asp-for="CatProfiles[@i].FoodPreferences" /><br />
                </div>
                <div>
                </div>
            </div>
            <hr />
        }

        <button type="submit">Save All Changes</button>
    </form>
}
else
{
    <p>No cats yet. Add your first below!</p>
}

<hr />

<h3>Add a New Cat</h3>
<form method="post" enctype="multipart/form-data">
    <input asp-for="CatProfile.Name" placeholder="Name" required />
    <input asp-for="CatProfile.Breed" placeholder="Breed" required />
    <input asp-for="CatProfile.Age" placeholder="Age" type="number" required />
    <input asp-for="CatProfile.Color" placeholder="Color" />
    <input asp-for="CatProfile.FoodPreferences" placeholder="Food" />
    <input asp-for="ImageUpload" type="file" />
    <button type="submit">Add Cat</button>
</form>

<h3>Delete a Cat</h3>

<form method="post" asp-page-handler="Delete" id="deleteCatForm" onsubmit="return confirm('Are you sure you want to delete this cat?');">
    <select id="catToDelete" name="id" onchange="toggleDeleteButton()">
        <option value="">-- Select a cat to delete --</option>
        @foreach (var cat in Model.CatProfiles)
        {
            <option value="@cat.Id">@cat.Name</option>
        }
    </select>

    <button type="submit" id="deleteButton" disabled style="display:none;">Delete Selected Cat</button>
</form>

<script>
    function toggleDeleteButton() {
        var select = document.getElementById('catToDelete');
        var btn = document.getElementById('deleteButton');
        if (select.value) {
            btn.disabled = false;
            btn.style.display = 'inline-block';
        } else {
            btn.disabled = true;
            btn.style.display = 'none';
        }
    }
</script>

<h3>My Posts (via API)</h3>
<ul id="post-list"></ul>

<script>
    async function loadMyPosts() {
        const response = await fetch('/api/posts/myposts');
        const list = document.getElementById('post-list');

        if (!response.ok) {
            const error = await response.text();
            list.innerHTML = `<li>Error loading posts: ${error}</li>`;
            return;
        }

        const posts = await response.json();
        list.innerHTML = '';
        posts.forEach(p => {
            const li = document.createElement('li');
            li.textContent = `${p.caption} (Posted at: ${new Date(p.postedAt).toLocaleString()})`;
            list.appendChild(li);
        });
    }
</script>